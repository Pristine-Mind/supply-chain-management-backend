# Generated by custom migration for marketplace category update

from django.db import migrations


def update_marketplace_product_categories(apps, schema_editor):
    """Update existing marketplace product categories to new values"""
    MarketplaceUserProduct = apps.get_model("market", "MarketplaceUserProduct")

    # Mapping from old categories to new categories
    category_mapping = {
        "FR": "GE",  # Fruits -> Groceries & Essentials
        "VG": "GE",  # Vegetables -> Groceries & Essentials
        "GR": "GE",  # Grains & Cereals -> Groceries & Essentials
        "PL": "GE",  # Pulses & Legumes -> Groceries & Essentials
        "SP": "GE",  # Spices & Herbs -> Groceries & Essentials
        "NT": "GE",  # Nuts & Seeds -> Groceries & Essentials
        "DF": "GE",  # Dairy & Animal Products -> Groceries & Essentials
        "FM": "IS",  # Fodder & Forage -> Industrial Supplies
        "FL": "HL",  # Flowers & Ornamental Plants -> Home & Living
        "HR": "HB",  # Herbs & Medicinal Plants -> Health & Beauty
        "OT": "OT",  # Other -> Other (no change)
    }

    for old_category, new_category in category_mapping.items():
        MarketplaceUserProduct.objects.filter(category=old_category).update(category=new_category)


def reverse_marketplace_product_categories(apps, schema_editor):
    """Reverse migration - map new categories back to old ones"""
    MarketplaceUserProduct = apps.get_model("market", "MarketplaceUserProduct")

    # Reverse mapping (note: this is lossy since multiple old categories map to same new ones)
    reverse_mapping = {
        "GE": "FR",  # Groceries & Essentials -> Fruits (default choice)
        "IS": "FM",  # Industrial Supplies -> Fodder & Forage
        "HL": "FL",  # Home & Living -> Flowers & Ornamental Plants
        "HB": "HR",  # Health & Beauty -> Herbs & Medicinal Plants
        "OT": "OT",  # Other -> Other (no change)
        "FA": "OT",  # Fashion & Apparel -> Other (new category)
        "EG": "OT",  # Electronics & Gadgets -> Other (new category)
        "TT": "OT",  # Travel & Tourism -> Other (new category)
    }

    for new_category, old_category in reverse_mapping.items():
        MarketplaceUserProduct.objects.filter(category=new_category).update(category=old_category)


class Migration(migrations.Migration):

    dependencies = [
        ("market", "0027_delivery_email"),
    ]

    operations = [
        migrations.RunPython(update_marketplace_product_categories, reverse_marketplace_product_categories),
    ]
