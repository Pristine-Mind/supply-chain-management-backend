# Generated by Django 4.2.24 on 2025-09-28 01:32

import uuid

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Notification",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("push", "Push Notification"),
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("in_app", "In-App Notification"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("body", models.TextField()),
                ("action_url", models.URLField(blank=True, null=True)),
                ("icon_url", models.URLField(blank=True, null=True)),
                ("event_data", models.JSONField(default=dict)),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("failed", "Failed"),
                            ("read", "Read"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        default=5,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                ("scheduled_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("retry_count", models.PositiveIntegerField(default=0)),
                ("max_retries", models.PositiveIntegerField(default=3)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="contenttypes.contenttype"
                    ),
                ),
            ],
            options={
                "db_table": "notifications",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserNotificationPreference",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("push_enabled", models.BooleanField(default=True)),
                ("email_enabled", models.BooleanField(default=True)),
                ("sms_enabled", models.BooleanField(default=False)),
                ("in_app_enabled", models.BooleanField(default=True)),
                ("order_notifications", models.BooleanField(default=True)),
                ("payment_notifications", models.BooleanField(default=True)),
                ("marketing_notifications", models.BooleanField(default=False)),
                ("delivery_notifications", models.BooleanField(default=True)),
                ("quiet_hours_enabled", models.BooleanField(default=False)),
                ("quiet_start_time", models.TimeField(blank=True, null=True)),
                ("quiet_end_time", models.TimeField(blank=True, null=True)),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_notification_preferences",
            },
        ),
        migrations.CreateModel(
            name="NotificationTemplate",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "template_type",
                    models.CharField(
                        choices=[
                            ("push", "Push Notification"),
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("in_app", "In-App Notification"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "title_template",
                    models.CharField(
                        help_text="Template for notification title with {variable} placeholders", max_length=255
                    ),
                ),
                ("body_template", models.TextField(help_text="Template for notification body with {variable} placeholders")),
                ("action_url_template", models.URLField(blank=True, help_text="Optional action URL template", null=True)),
                ("icon_url", models.URLField(blank=True, null=True)),
                ("variables", models.JSONField(default=list, help_text="List of available variables for this template")),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "notification_templates",
                "indexes": [models.Index(fields=["template_type", "is_active"], name="notificatio_templat_9634d5_idx")],
            },
        ),
        migrations.CreateModel(
            name="NotificationRule",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "trigger_event",
                    models.CharField(
                        choices=[
                            ("order_created", "Order Created"),
                            ("order_confirmed", "Order Confirmed"),
                            ("order_shipped", "Order Shipped"),
                            ("order_delivered", "Order Delivered"),
                            ("order_cancelled", "Order Cancelled"),
                            ("payment_received", "Payment Received"),
                            ("payment_failed", "Payment Failed"),
                            ("stock_low", "Stock Low"),
                            ("stock_out", "Stock Out"),
                            ("bid_created", "Bid Created"),
                            ("bid_accepted", "Bid Accepted"),
                            ("delivery_assigned", "Delivery Assigned"),
                            ("delivery_completed", "Delivery Completed"),
                            ("user_registered", "User Registered"),
                            ("custom", "Custom Event"),
                        ],
                        max_length=50,
                    ),
                ),
                ("conditions", models.JSONField(default=list, help_text="List of conditions to match")),
                ("target_users", models.JSONField(default=dict, help_text="Rules for selecting target users")),
                ("delay_minutes", models.PositiveIntegerField(default=0, help_text="Delay before sending notification")),
                ("is_active", models.BooleanField(default=True)),
                (
                    "priority",
                    models.IntegerField(
                        default=5,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "template",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="notification.notificationtemplate"),
                ),
            ],
            options={
                "db_table": "notification_rules",
            },
        ),
        migrations.CreateModel(
            name="NotificationEvent",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("triggered", "Rule Triggered"),
                            ("created", "Notification Created"),
                            ("sent", "Notification Sent"),
                            ("delivered", "Notification Delivered"),
                            ("failed", "Notification Failed"),
                            ("read", "Notification Read"),
                            ("clicked", "Notification Clicked"),
                        ],
                        max_length=20,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("metadata", models.JSONField(default=dict)),
                (
                    "notification",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="events", to="notification.notification"
                    ),
                ),
            ],
            options={
                "db_table": "notification_events",
            },
        ),
        migrations.CreateModel(
            name="NotificationBatch",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("total_count", models.PositiveIntegerField(default=0)),
                ("sent_count", models.PositiveIntegerField(default=0)),
                ("failed_count", models.PositiveIntegerField(default=0)),
                ("scheduled_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("context_data", models.JSONField(default=dict, help_text="Context data for template rendering")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_batches",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("target_users", models.ManyToManyField(related_name="notification_batches", to=settings.AUTH_USER_MODEL)),
                (
                    "template",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="notification.notificationtemplate"),
                ),
            ],
            options={
                "db_table": "notification_batches",
            },
        ),
        migrations.AddField(
            model_name="notification",
            name="rule",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="notification.notificationrule"
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="template",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="notification.notificationtemplate"
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="notifications", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="DeviceToken",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("token", models.TextField(unique=True)),
                (
                    "device_type",
                    models.CharField(choices=[("ios", "iOS"), ("android", "Android"), ("web", "Web")], max_length=10),
                ),
                ("device_id", models.CharField(blank=True, max_length=255)),
                ("is_active", models.BooleanField(default=True)),
                ("last_used", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="device_tokens",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "device_tokens",
            },
        ),
        migrations.CreateModel(
            name="NotificationAnalytics",
            fields=[],
            options={
                "verbose_name": "Notification Analytics",
                "verbose_name_plural": "Notification Analytics",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("notification.notification",),
        ),
        migrations.AddIndex(
            model_name="notificationrule",
            index=models.Index(fields=["trigger_event", "is_active"], name="notificatio_trigger_7d1d32_idx"),
        ),
        migrations.AddIndex(
            model_name="notificationrule",
            index=models.Index(fields=["priority"], name="notificatio_priorit_0f306f_idx"),
        ),
        migrations.AddIndex(
            model_name="notificationevent",
            index=models.Index(fields=["notification", "event_type"], name="notificatio_notific_52370a_idx"),
        ),
        migrations.AddIndex(
            model_name="notificationevent",
            index=models.Index(fields=["timestamp"], name="notificatio_timesta_058f0c_idx"),
        ),
        migrations.AddIndex(
            model_name="notificationbatch",
            index=models.Index(fields=["status", "scheduled_at"], name="notificatio_status_2f81fa_idx"),
        ),
        migrations.AddIndex(
            model_name="notificationbatch",
            index=models.Index(fields=["created_at"], name="notificatio_created_9e187f_idx"),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(fields=["user", "status"], name="notificatio_user_id_8ab96f_idx"),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(fields=["notification_type", "status"], name="notificatio_notific_21f913_idx"),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(fields=["scheduled_at"], name="notificatio_schedul_2a5c00_idx"),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(fields=["priority", "scheduled_at"], name="notificatio_priorit_e531e1_idx"),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(fields=["created_at"], name="notificatio_created_e4c995_idx"),
        ),
        migrations.AddIndex(
            model_name="devicetoken",
            index=models.Index(fields=["user", "is_active"], name="device_toke_user_id_e99165_idx"),
        ),
        migrations.AddIndex(
            model_name="devicetoken",
            index=models.Index(fields=["device_type"], name="device_toke_device__6c72c5_idx"),
        ),
    ]
